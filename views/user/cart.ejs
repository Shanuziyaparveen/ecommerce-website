<%- include("../../views/partials/user/header") %>
<!-- SweetAlert2 CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

<!-- SweetAlert2 JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>

<style>
    /* General Styles */
    body {
        font-family: 'Arial', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f5f5f5;
        color: #333;
        line-height: 1.6;
    }

    a {
        text-decoration: none;
        color: #007bff;
    }

    .container {
        width: 90%;
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px 0;
    }

    /* Header and Footer */
    header, footer {
        background-color: #4B0082;
        color: #fff;
        text-align: center;
        padding: 10px 0;
    }

    footer {
        font-size: 0.9em;
    }

    /* Cart Page Styles */
    .cart-page {
        padding: 40px 0;
    }

    .cart-header h2 {
        font-size: 2em;
        color: #4B0082;
    }

    .cart-items {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    .cart-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: 1px solid #ddd;
        padding: 15px 0;
    }

    .cart-item:last-child {
        border-bottom: none;
    }

    .cart-item img {
        width: 100px;
        border-radius: 5px;
    }

    .cart-item-details {
        flex: 1;
        padding-left: 20px;
    }

    .cart-item-details h5 {
        font-size: 1.2em;
    }

    .cart-item-details .price {
        color: #ff6b6b;
        font-size: 1.1em;
        margin-top: 5px;
    }

    .cart-item-actions {
        display: flex;
        flex-direction: column;
        align-items: flex-end;
    }

    .remove-item {
        background-color: #e74c3c;
        color: #fff;
        border: none;
        padding: 8px 15px;
        font-size: 14px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .remove-item:hover {
        background-color: #c0392b;
    }

    /* Cart Summary */
    .cart-summary {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        margin-top: 20px;
    }

    .cart-summary h4 {
        font-size: 1.5em;
        color: #4B0082;
    }

    .checkout-btn {
        background-color: #4B0082;
        color: #fff;
        border: none;
        padding: 15px 20px;
        font-size: 16px;
        border-radius: 5px;
        cursor: pointer;
        width: 100%;
        margin-top: 20px;
        transition: background-color 0.3s;
    }

    .checkout-btn:hover {
        background-color: #5D3FD3;
    }

    /* Quantity Buttons */
    .increment-btn, .decrement-btn {
        padding: 6px 12px;
        font-size: 14px;
        border: 1px solid #6a3b91;
        background-color: #6a3b91;
        color: white;
        cursor: pointer;
        border-radius: 4px;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

    .increment-btn:hover, .decrement-btn:hover {
        background-color: #5c2e7d;
    }

    /* Price Styling */
    .regular-price {
        text-decoration: line-through;
        color: #a9a9a9;
        font-size: 14px;
        margin-right: 10px;
    }

    .highlighted-price {
        color: #3b0b44;
        font-weight: bold;
        font-size: 18px;
    }

    /* Wallet Section */
    .wallet-balance {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        margin-top: 20px;
    }

    .wallet-balance-text {
        font-size: 18px;
        font-weight: bold;
    }

    .remaining-amount {
        background-color: #f8f8f8;
        border: 1px solid #ccc;
        padding: 10px;
        border-radius: 5px;
        font-weight: bold;
        margin-top: 10px;
    }

    .coupon-section {
        display: flex;
        gap: 10px;
        margin-bottom: 15px;
    }

    .coupon-input {
        padding: 8px;
        width: 60%;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 16px;
    }

    .btn-primary {
        background-color: #fc0c7f;
        color: white;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
    }
    .quantity-feedback {
    font-size: 0.9rem; /* Smaller font for feedback */
    color:#5a286b;   /* Red color for warnings */
    background: #eecef5;/* Light red background */
    padding: 6px 10px; /* Padding for feedback box */
    border-radius: 4px; /* Rounded corners for feedback */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
    text-align: center; /* Center text inside feedback */
    max-width: 80%; /* Restrict feedback width */
    margin-top: 8px; /* Space above feedback message */
    display: none; /* Default state is hidden */
}

/* Show the feedback if it has content */
.quantity-feedback:not(:empty) {
    display: block; /* Display feedback only when not empty */
    animation: fadeIn 0.5s ease-in-out; /* Smooth fade-in animation */
}


/* Animation keyframes for smooth fade-in */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(-10px); /* Start slightly above */
    }
    to {
        opacity: 1;
        transform: translateY(0); /* End at normal position */
    }
}

/* Optional: Make the feedback message disappear after some time */
.quantity-feedback.disappear {
    animation: fadeOut 0.5s ease-in-out 3s forwards; /* Disappear after 3s */
}

@keyframes fadeOut {
    from {
        opacity: 1;
        transform: translateY(0);
    }
    to {
        opacity: 0;
        transform: translateY(-10px);
    }
}

</style>

<body>
    <div class="container cart-page">
        <div class="cart-header">
            <h2>Your Shopping Cart</h2>
        </div>
        <% let disableCheckout = false; %>  
        <% if (totalItems > 0) { %>
            <div class="cart-items">
                <% cartItems.forEach(item => { %>
                    <div class="cart-item">
                        <img src="/uploads/re-image/<%= item.image %>" alt="<%= item.name %>">
                        <div class="cart-item-details">
                            <h5><%= item.name %></h5>
                            <p class="price">
                                <span class="regular-price">₹<%= item.regularPrice %></span>
                                <span class="highlighted-price">₹<%= item.salePrice %></span>
                            </p>
                            <div class="quantity-controls" data-product-id="<%= item.id %>">
                                <% if (item.stock === 0) { %>
                                    <button class="increment-btn" disabled>Out of Stock</button>
                                    <button class="decrement-btn" disabled>Min Quantity</button>
                                    <span class="quantity-feedback">Product is out of stock.</span>
                                    <% disableCheckout = true; %> <!-- Set disableCheckout to true if the item is out of stock -->
                                <% } else { %>
                                    <button class="increment-btn" data-product-id="<%= item.id %>" 
                                        onclick="incrementQuantity('<%= item.id %>')" 
                                        <% if (item.quantity >= item.stock || item.quantity >= 5) { %> disabled <% } %>>+</button>
                                    <span id="item-quantity-<%= item.id %>"><%= item.quantity %></span>
                                    <button class="decrement-btn" data-product-id="<%= item.id %>" 
                                        onclick="decrementQuantity('<%= item.id %>')" 
                                        <% if (item.quantity <= 1) { %> disabled <% } %>>-</button>
                                    <span class="quantity-feedback">
                                        <% if (item.quantity > item.stock) { %>
                                            Stock limit reached.
                                            <% disableCheckout = true; %> 
                                        <% } else if (item.quantity >= 5) { %>
                                            Max quantity reached.
                                        <% } else if (item.quantity <= 1) { %>
                                            Min quantity is one.
                                        <% } else { %>
                                          
                                        <% } %>
                                    </span>
                                <% } %>
                            </div>
                        </div>
                        <div class="cart-item-actions">
                            <p id="item-total-price-<%= item.id %>">Total: ₹<%= item.totalPrice %></p>
                            <button class="remove-item" onclick="removeFromCart('<%= item.id %>')">Remove</button>
                        </div>
                    </div>
                <% }) %>
            </div>
        
            <!-- Cart Summary -->
            <h4>Cart Summary</h4>
            <p>Total Items: <span id="totalItems"><%= totalItems %></span></p>
            <p>Subtotal: <span id="cartSubtotal"><%= cartSubtotal %></span></p>
            <p>Tax: <span id="cartTax"><%= cartTax %></span></p>
            <p>Total: <span id="updatedAmount"><%= cartTotal %></span></p>
        
            <% if (disableCheckout) { %>
                <p style="color: red; font-weight: bold;">Some items are out of stock or the quantity exceeds available stock. Please adjust your cart.</p>
            <% } %>
        
            <!-- Checkout button: Disabled if any item is out of stock or quantity exceeds stock -->
            <button class="checkout-btn" onclick="checkout()" <% if (disableCheckout) { %> disabled <% } %>>Proceed to Checkout</button>
        </div>
        
        <% } else { %>
            <div class="empty-cart-message"
                style="text-align: center; padding: 40px; background-color: #fff; border-radius: 8px; box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);">
                <h3>Your cart is empty!</h3>
                <p>It looks like you haven't added any products to your cart yet. Start shopping now!</p>
                <a href="/getAllProducts" style="color: #4B0082; text-decoration: none; font-size: 16px;">Go to Shop</a>
            </div>
        <% } %>
        
<br>
<br>

    <%- include("../../views/partials/user/footer") %>
</body>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        // Function to handle item removal from the cart
        function removeFromCart(productId) {
            $.ajax({
                type: 'POST',
                url: '/removeFromCart',  // URL to the route that will handle item removal
                contentType: 'application/json',  // Set the correct content type to JSON
                data: JSON.stringify({ productId: productId }),  // Send the productId as JSON
                success: function(response) {
                    Swal.fire({
                        title: 'Item removed from cart!',
                        icon: 'success',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        window.location.reload();  // Reload page to reflect changes in cart
                    });
                },
                error: function(error) {
                    Swal.fire({
                        title: 'Error',
                        text: 'Could not remove item from cart. Please try again.',
                        icon: 'error',
                        confirmButtonText: 'Okay'
                    });
                }
            });
        }
    

        // Checkout function
        function checkout() {
            // Check if user is logged in
            const isLoggedIn = <%= user ? 'true' : 'false' %>;

            if (!isLoggedIn) {
                Swal.fire({
                    title: 'Login required!',
                    text: 'You need to be logged in to proceed to checkout.',
                    icon: 'warning',
                    confirmButtonText: 'Login'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Redirect to the login page
                        window.location.href = '/login';
                    }
                });
                return;
            }

            // Redirect to checkout page
            window.location.href = '/checkout';
        }
    
        document.getElementById('apply-wallet-button').addEventListener('click', async () => {
    try {
        const response = await fetch('/cart/select-wallet', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ paymentMethod: 'wallet' })
        });

        if (response.ok) {
            const data = await response.json();
            document.getElementById('wallet-balance-display').innerText = data.walletBalance;
            document.getElementById('remaining-amount-display').innerText = data.remainingAmountToPay;
            document.getElementById('remaining-amount').style.display = 'block';
        } else {
            const error = await response.text();
            alert(error);
        }
    } catch (error) {
        console.error("Error applying wallet:", error);
        alert("An error occurred while applying the wallet.");
    }
});

function applyCoupon() {
    const couponCode = document.getElementById("couponCode").value;
    const totalAmount = document.getElementById("totalAmount").value;

    fetch('/couponApply', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ couponCode, totalAmount })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire({
                title: 'Coupon Applied!',
                text: `Discount: ₹${data.discount}`,
                icon: 'success',
                confirmButtonText: 'OK'
            }).then(() => {
                // Update the cart summary dynamically
                document.getElementById('updatedAmount').innerText = data.updatedAmount;
                document.getElementById('discount').innerText = `-₹${data.discount}`;

                // Optionally, save the coupon details to the session (server-side)
                // This could be done by making an additional request to the backend if needed
            });
        } else {
            Swal.fire({
                title: 'Invalid Coupon',
                text: data.message || 'Please enter a valid coupon code.',
                icon: 'error',
                confirmButtonText: 'Try Again'
            });
        }
    })
    .catch(err => {
        console.error("Error applying coupon", err);
        Swal.fire({
            title: 'Error',
            text: 'An error occurred while applying the coupon. Please try again.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    });
}
function incrementQuantity(productId) {
    $.ajax({
        type: 'POST',
        url: '/cart/update',
        data: JSON.stringify({ productId, action: 'increment' }),
        contentType: 'application/json',
        success: function(response) {
            if (response.success) {
                // Centralized UI update
                updateCartUI(productId, response.updatedQuantity, response);
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: response.errorMessage || 'Failed to update cart.',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'Try Again'
                });
            }
        },
        error: function() {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Error updating cart.',
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'Try Again'
            });
        }
    });
}

function decrementQuantity(productId) {
    $.ajax({
        type: 'POST',
        url: '/cart/update',
        data: JSON.stringify({ productId, action: 'decrement' }),
        contentType: 'application/json',
        success: function(response) {
            if (response.success) {
                // Centralized UI update
                updateCartUI(productId, response.updatedQuantity, response);
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: response.errorMessage || 'Failed to update cart.',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'Try Again'
                });
            }
        },
        error: function() {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Error updating cart.',
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'Try Again'
            });
        }
    });
}
function updateCartUI(productId, updatedQuantity, response) {
    const cartItem = $(`.quantity-controls[data-product-id="${productId}"]`);

    // Update quantity display
    cartItem.find(`#item-quantity-${productId}`).text(updatedQuantity);

    // Update feedback messages and buttons
    const feedback = cartItem.find('.quantity-feedback');
    if (response.stock === 0) {
        feedback.text('Product is out of stock.');
    } else if (updatedQuantity >= response.stock) {
        feedback.text('Stock limit reached.');
    } else if (updatedQuantity >= 5) {
        feedback.text('Max quantity reached.');
    } else if (updatedQuantity <= 1) {
        feedback.text('Min quantity reached.');
    } else {
        feedback.text('');
    }

    // Enable/Disable buttons
    cartItem.find('.increment-btn').prop('disabled', updatedQuantity >= response.stock || updatedQuantity >= 5);
    cartItem.find('.decrement-btn').prop('disabled', updatedQuantity <= 1);

    // Update cart summary
    $('#totalItems').text(response.totalItems);
    $('#cartSubtotal').text(`₹${response.cartSubtotal}`);
    $('#cartTax').text(`₹${response.cartTax}`);
    $('#updatedAmount').text(`₹${response.cartTotal}`);
}
    </script>