<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
 
   body {
    background-color: #f5f7fb;
    color: #333;
    font-family: 'Poppins', sans-serif;
    margin: 0;
    padding: 0;
    line-height: 1.6;
  }

  header, footer {
    background-color: #23262b;
    color: #fff;
    padding: 15px;
    text-align: center;
    font-size: 16px;
    border-top: 3px solid #ff7a00;
    border-bottom: 3px solid #ff7a00;
  }

  header a, footer a {
    color: #ff7a00;
    text-decoration: none;
    margin: 0 12px;
    transition: color 0.3s ease;
  }

  header a:hover, footer a:hover {
    color: #ffcc66;
  }

  .container {
    max-width: 800px;
    margin: 50px auto;
    padding: 40px;
    background-color: #fff;
    border-radius: 15px;
    box-shadow: 0 12px 25px rgba(0, 0, 0, 0.1);
    text-align: center;
  }

  h1 {
    margin-bottom: 30px;
    color: #23262b;
    font-size: 32px;
    font-weight: 600;
  }

  .payment-methods {
    display: flex;
    flex-direction: column;
    gap: 25px;
    margin-top: 20px;
  }

  .payment-option {
    display: flex;
    align-items: center;
    background-color: #f4f4f9;
    padding: 20px;
    border-radius: 10px;
    cursor: pointer;
    transition: transform 0.3s ease, box-shadow 0.4s ease;
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
  }

  .payment-option input[type="radio"] {
    width: 20px;
    height: 20px;
    margin-right: 12px;
    cursor: pointer;
  }

  .payment-option label {
    color: #23262b;
    font-size: 18px;
    cursor: pointer;
  }

  .payment-option:hover {
    transform: scale(1.03);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }

  .confirm-payment-button {
    margin-top: 40px;
    padding: 16px 40px;
    background-color: #2f0e2f;
    color: #fff;
    border: none;
    border-radius: 12px;
    cursor: pointer;
    font-size: 18px;
    font-weight: 600;
    transition: background-color 0.3s ease, transform 0.3s ease;
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
  }

  .confirm-payment-button:hover {
    background-color: #2f0e2f;
    transform: scale(1.05);
  }

  .breadcrumb {
    display: flex;
    justify-content: center;
    gap: 16px;
    margin-bottom: 40px;
  }

  .breadcrumb a {
    color: #2f0e2f;
    text-decoration: none;
    font-size: 16px;
    font-weight: 600;
    transition: color 0.3s ease;
  }

  .breadcrumb a:hover {
    color: #2f0e2f;
  }

  .breadcrumb span {
    color: #b1b1b1;
  }

  .cod-message {
    display: none;
    color: #2f0e2f;
    font-size: 14px;
    margin-top: 5px;
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
  }

  .cod-message.show {
    display: block;
    opacity: 1;
  }

  /* Mobile Responsiveness */
  @media (max-width: 768px) {
    .container {
      padding: 20px;
    }

    .payment-option {
      flex-direction: column;
      align-items: flex-start;
    }
  }
</style>

<body>
  <div class="container">
    <div class="page-header breadcrumb-wrap">
      <div class="breadcrumb">
        <a href="/" rel="nofollow">Home</a>
        <span>&gt;</span>
        <a href="/Wishlist" rel="nofollow">Wishlist</a>
        <span>&gt;</span>
        <a href="/cart" rel="nofollow">Cart</a>
      </div>
    </div>
   
    <h1>Select Payment Method</h1>
    <form class="pay-form" action="/process-payment" method="POST">
      <div class="payment-methods">
        <div class="payment-option">
          <input type="radio" id="Razorpay" name="paymentMethod" value="Razorpay">
          <label for="Razorpay">Razorpay</label>
        </div>
        <div class="payment-option">
          <input type="radio" id="DebitCard" name="paymentMethod" value="Debit Card">
          <label for="DebitCard">Debit Card</label>
        </div>
        <div class="payment-option">
          <input type="radio" id="UPI" name="paymentMethod" value="UPI">
          <label for="UPI">UPI</label>
        </div>
        <div class="payment-option">
          <input type="radio" id="COD" name="paymentMethod" value="COD" <%= discountedAmount > 1000 ? 'disabled' : '' %> onclick="checkCOD()">
          <label for="COD">COD</label>
          <div class="cod-message" id="codMessage">
            Orders above â‚¹1000 can't be confirmed through COD.
          </div>
        </div>
      </div>

      <button type="submit" class="confirm-payment-button">Confirm and Proceed</button>
    </form>
  </div>

  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>
 $(document).ready(function() { 
  $('.pay-form').submit(function(e) {
    e.preventDefault();

    var formData = $(this).serialize();
    var paymentMethod = $('input[name="paymentMethod"]:checked').val();

    if (!paymentMethod) {
      Swal.fire({
        title: 'Error',
        text: 'Please select a payment method.',
        icon: 'error',
        confirmButtonText: 'OK'
      });
      return;
    }

    if (paymentMethod === "COD") {
      // Handle Cash on Delivery (COD)
      $.ajax({
        url: "/process-payment",
        type: "POST",
        data: formData,
        success: function(res) {
          if (res.success) {
            Swal.fire({
              title: 'Order Confirmed',
              text: 'Your order will be shipped and payment will be collected on delivery.',
              icon: 'success',
              confirmButtonText: 'OK'
            }).then(function() {
              window.location.href = "/confirm-order";
            });
          } else {
            Swal.fire({
              title: 'Error',
              text: res.msg,
              icon: 'error',
              confirmButtonText: 'OK'
            });
          }
        },
        error: function(err) {
          Swal.fire({
            title: 'Error',
            text: 'Something went wrong. Please try again.',
            icon: 'error',
            confirmButtonText: 'OK'
          });
        }
      });
    } else {
      $.ajax({
  url: "/process-payment",
  type: "POST",
  data: formData,
  success: function(res) {
    if (res.success) {
      var options = {
        "key": res.key_id, // Razorpay public key
        "amount": res.amount * 100, // Razorpay expects amount in paise
        "currency": "INR",
        "order_id": res.order_id, // Razorpay order ID
        "handler": function(response) {
          // When payment is successful, validate it on the backend
          $.ajax({
            url: "/payment-success", // Endpoint to validate payment
            type: "POST",
            data: {
              razorpayOrderId: response.razorpay_order_id,
              razorpayPaymentId: response.razorpay_payment_id,
              razorpaySignature: response.razorpay_signature
            },
            success: function(res) {
              if (res.success) {
                Swal.fire({
                  title: 'Payment Succeeded',
                  text: 'Your payment was successful!',
                  icon: 'success',
                  confirmButtonText: 'OK'
                }).then(function() {
                  window.location.href = "/confirm-order"; // Redirect to confirmation page
                });
              } else {
                Swal.fire({
                  title: 'Error',
                  text: res.msg || 'Payment validation failed.',
                  icon: 'error',
                  confirmButtonText: 'OK'
                }).then(function() {
                  window.location.href = "/payment-failed"; // Redirect to failure page
                });
              }
            },
            error: function(err) {
              console.error("Error validating payment:", err);
              Swal.fire({
                title: 'Error',
                text: 'An error occurred while validating your payment. Please try again or contact support.',
                icon: 'error',
                confirmButtonText: 'OK'
              }).then(function() {
                window.location.href = "/payment-failed"; // Redirect to failure page
              });
            }
          });
        },
        "prefill": {
          "contact": res.contact,
          "name": res.name,
          "email": res.email
        },
        "theme": {
          "color": "#ff7a00" // Theme color for the Razorpay modal
        }
      };

      var razorpayObject = new Razorpay(options);
      // Razorpay payment initiation script
razorpayObject.on('payment.failed', function(response) {
  // Log the payment failure details for debugging
  console.error("Razorpay payment failed:", response.error);

  // Display a SweetAlert2 dialog for the payment failure
  Swal.fire({
    title: "Payment Failed",
    text: "Your payment could not be processed. Please try again.",
    icon: "error",
    confirmButtonText: "OK",
  }).then(() => {
    // Redirect to the payment-failed route upon user confirmation
    window.location.href = "/payment-failed";
  });
});

      razorpayObject.open();
    } else {
      Swal.fire({
        title: 'Error',
        text: res.msg || 'Unable to initiate payment. Please try again.',
        icon: 'error',
        confirmButtonText: 'OK'
      });
    }
  },
  error: function(err) {
    Swal.fire({
      title: 'Error',
      text: 'Something went wrong. Please try again.',
      icon: 'error',
      confirmButtonText: 'OK'
    });
  }
});

    }
  });
});



    const frontendDiscountedAmount = <%= discountedAmount %>;

    function checkCOD() {
      const codRadio = document.getElementById('COD');
      const codMessage = document.getElementById('codMessage');
      if (frontendDiscountedAmount > 1000 && codRadio.checked) {
        codMessage.classList.add('show');
      } else {
        codMessage.classList.remove('show');
      }
    }

    window.onload = function() {
      checkCOD();
    };
  </script>

</body>
