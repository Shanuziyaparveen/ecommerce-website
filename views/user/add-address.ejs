<%- include("../../views/partials/user/header") %>
<div class="container mt-4">
   <h3 class="mt-3" style="color: #046963; margin-bottom:70px">Create User Address</h3>
   <form id="addressForm" method="POST" action="/addAddress" class="border-0 p-3">
    <div class="row mb-50">
        <div class="form-group col-md-4">
            <label for="addressType">Address Type:</label>
            <select class="form-control border-3" id="addressType" name="addressType">
                <option value="Home">Home</option>
                <option value="Work">Work</option>
                <option value="Other">Other</option>
            </select>
        </div>
        
        <div class="form-group col-md-4">
            <label for="name">Name:</label>
            <input type="text" class="form-control border-3" id="name" name="name">
        </div>
        <div class="form-group col-md-4">
            <label for="city">City:</label>
            <input type="text" class="form-control border-3" id="city" name="city">
        </div>
    </div>
    <div class="row mb-3">
        <div class="form-group col-md-4">
            <label for="landMark">Landmark:</label>
            <input type="text" class="form-control border-3" id="landMark" name="landMark">
        </div>
        <div class="form-group col-md-4">
            <label for="state">State:</label>
            <input type="text" class="form-control border-3" id="state" name="state">
        </div>
        <div class="form-group col-md-4">
            <label for="pincode">Pincode:</label>
            <input type="number" class="form-control border-3" id="pincode" name="pincode">
        </div>
    </div>
    <div class="row mb-3">
        <div class="form-group col-md-4">
            <label for="phone">Phone:</label>
            <input type="number" class="form-control border-3" id="phone" name="phone">
        </div>
        <div class="form-group col-md-4">
            <label for="altPhone">Alternate Phone:</label>
            <input type="number" class="form-control border-3" id="altPhone" name="altPhone">
        </div>
    </div>
    <button type="submit" id="submitButton" class="btn btn-primary">Submit</button>
</form>

<script>
    document.getElementById('addressForm').addEventListener('submit', function(event) {
        if (!validateForm()) {
            event.preventDefault();
        }
    });

    function validateForm() {
        let isValid = true;
        const fields = [
            { id: "addressType", name: "Address Type" },
            { id: "name", name: "Name", pattern: /^[A-Za-z\s]+$/, errorMessage: "Name should contain alphabets only." },
            { id: "city", name: "City", pattern: /^[A-Za-z\s]+$/, errorMessage: "City should contain alphabets only." },
            { id: "landMark", name: "Landmark", pattern: /^[A-Za-z\s]+$/, errorMessage: "Landmark should contain alphabets only." },
            { id: "state", name: "State", pattern: /^[A-Za-z\s]+$/, errorMessage: "State should contain alphabets only." },
            { id: "pincode", name: "Pincode", pattern: /^\d{6}$/, errorMessage: "Pincode should be a 6-digit number." },
            { id: "phone", name: "Phone", pattern: /^\d{10}$/, errorMessage: "Phone number should be a 10-digit number." },
            { id: "altPhone", name: "Alternate Phone", pattern: /^\d{10}$/, errorMessage: "Alternate phone number should be a 10-digit number." }
        ];

        fields.forEach(field => {
            const input = document.getElementById(field.id);
            const errorElement = document.getElementById(field.id + '-error');

            if (errorElement) {
                errorElement.remove();
            }

            if (!input.value.trim()) {
                createErrorMessage(input, "This field is required.");
                isValid = false;
            } else if (field.pattern && !field.pattern.test(input.value.trim())) {
                createErrorMessage(input, field.errorMessage);
                isValid = false;
            }
        });

        const phone = document.getElementById('phone').value;
        const altPhone = document.getElementById('altPhone').value;

        if (phone === altPhone) {
            const altPhoneInput = document.getElementById('altPhone');
            createErrorMessage(altPhoneInput, "Phone number and alternate phone number should be different.");
            isValid = false;
        }

        return isValid;
    }

    function createErrorMessage(input, message) {
        const errorDiv = document.createElement('div');
        errorDiv.className = "text-danger";
        errorDiv.textContent = message;
        errorDiv.id = input.id + '-error';
        input.parentNode.appendChild(errorDiv);
    }
</script>

<%- include("../../views/partials/user/footer") %>
