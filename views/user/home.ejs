<%- include("../../views/partials/user/header") %>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css" />
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>

<style>
  body {
      font-family: Arial, sans-serif;
      background-color: #f9f9f9;
  }

  .btn {
      display: inline-block;
      padding: 10px 20px;
      font-size: 16px;
      font-weight: bold;
      color: #fff;
      background-color: #673ab7; /* Deep Purple */
      border: none;
      border-radius: 5px;
      transition: background-color 0.3s, transform 0.3s;
      cursor: pointer;
      text-align: center;
  }

  .btn:hover {
      background-color: #512da8; /* Darker Purple */
      transform: translateY(-2px);
  }

  .btn:active {
      transform: translateY(1px);
  }

  .product-cart-wrap {
      border: 1px solid #ddd;
      border-radius: 8px;
      overflow: hidden;
      background: #fff;
      transition: box-shadow 0.3s;
  }

  .product-cart-wrap:hover {
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
  }

  .product-img {
      position: relative;
      text-align: center;
      padding: 15px;
      background-color: #f1f1f1;
  }

  .product-img img {
      max-width: 100%;
      height: auto;
      transition: transform 0.3s;
  }

  .product-img img:hover {
      transform: scale(1.05);
  }

  .wishlist-btn {
      position: absolute;
      top: 10px;
      right: 10px;
      background-color: rgba(103, 58, 183, 0.8); /* Semi-transparent Deep Purple */
      padding: 8px;
      border-radius: 50%;
      color: #fff;
      font-size: 18px;
      z-index: 10;
      transition: background-color 0.3s, transform 0.3s;
  }

  .wishlist-btn:hover {
      background-color: rgba(81, 45, 168, 1); /* Darker Purple */
      transform: translateY(-2px);
  }

  .product-content {
      padding: 15px;
      text-align: center;
  }

  .product-content h6 {
      font-size: 18px;
      font-weight: bold;
      color: #333;
      margin-bottom: 8px;
  }

  .product-content h5 {
      font-size: 16px;
      color: #673ab7;
      margin-bottom: 15px;
  }

  .btn-container {
      display: flex;
      justify-content: center;
      gap: 10px;
  }

  .btn.add-to-cart-btn {
      background-color: #673ab7;
  }

  .btn.add-to-cart-btn:hover {
      background-color: #512da8;
  }

  .btn.add-to-wishlist-btn {
      background-color: white;
      color: #673ab7;
      border: 1px solid #673ab7;
  }

  .btn.add-to-wishlist-btn:hover {
      background-color: #673ab7;
      color: white;
  }

  .product-section {
      padding: 40px 0;
  }

  .product__filter {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
  }

  .product__filter > div {
      flex: 1 1 calc(25% - 20px);
      max-width: calc(25% - 20px);
  }
</style>

<!-- Hero Section -->
<section class="hero-slider position-relative pt-10 pb-10">
  <div class="swiper-container w-60 mx-auto">
      <div class="swiper-wrapper">
          <% banner.slice(0, 2).forEach(bannerItem => { %>
              <div class="swiper-slide">
                  <div class="single-hero-slider single-animation-wrap">
                      <div class="container">
                          <div class="row align-items-center slider-animated-1">
                              <div class="col-lg-12">
                                  <div class="single-slider-img single-slider-img-1">
                                      <a href="/">
                                          <img class="animated slider-1-1" src="/uploads/re-image/<%= bannerItem.image %>" alt="<%= bannerItem.title %>" style="width: 100%; height: auto;">
                                      </a>
                                  </div>
                                  <div class="single-slider-content">
                                      <p class="animated"></p>
                                  </div>
                              </div>
                          </div>
                      </div>
                  </div>
              </div>
          <% }) %>
      </div>
      <div class="swiper-pagination"></div>
      <div class="swiper-button-next"></div>
      <div class="swiper-button-prev"></div>
  </div>
</section>

<!-- Banner Section -->
<section class="banner-area pt-5 pb-5">
  <div class="container">
      <div class="row">
          <% banner.slice(2).forEach(bannerItem => { %>
              <div class="col-lg-4 col-md-6">
                  <div class="single-banner">
                      <a href="/">
                          <img src="/uploads/re-image/<%= bannerItem.image %>" alt="<%= bannerItem.title %>" style="width: 100%; height: auto;">
                      </a>
                  </div>
              </div>
          <% }) %>
      </div>
  </div>
</section>

<!-- Product Section -->
<section class="product-section">
  <div class="container">
      <div class="row">
          <div class="col-lg-12">
              <ul class="filter__controls">
                  <li data-filter=".new-arrivals">New Arrivals</li>
              </ul>
          </div>
      </div>
      <div class="row product__filter">
          <% for(let i = 0; i < products.length; i++) { %>
              <div>
                  <div class="product-cart-wrap">
                      <div class="product-img">
                          <a href="/productDetails?id=<%= products[i]._id %>">
                              <img src="/uploads/re-image/<%= products[i].productImage[0] %>" alt="<%= products[i].productName %>">
                          </a>
                          
                      </div>
                      <div class="product-content">
                          <h6><%= products[i].productName %></h6>
                          <h5> <span>Rs. <del><%= products[i].regularPrice %></del> <b>Rs. <%= products[i].salePrice %></b></span></h5>
                          <div class="btn-container">
                            <button class="btn add-to-cart-btn" onclick="addToCart('<%= products[i]._id %>')">
                                <i class="fas fa-cart-plus me-2"></i>Add to Cart
                            </button>
                              <button class="btn add-to-wishlist-btn" onclick="<%= products[i].isInWishlist ? `removeFromWishList('${products[i]._id}')` : `addToWishList('${products[i]._id}')` %>">
                                  <i class="<%= products[i].isInWishlist ? 'fas fa-heart' : 'far fa-heart' %>"></i> Wishlist
                              </button>
                          </div>
                      </div>
                  </div>
              </div>
          <% } %>
      </div>
  </div>
</section>

<%- include("../../views/partials/user/footer") %>


<script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
<script>
  var swiper = new Swiper('.swiper-container', {
      slidesPerView: 1,
      loop: true,
      autoplay: {
          delay: 3000,
          disableOnInteraction: false,
      },
      pagination: {
          el: '.swiper-pagination',
          clickable: true,
      },
      navigation: {
          nextEl: '.swiper-button-next',
          prevEl: '.swiper-button-prev',
      },
  });

  function addToWishList(productId) {
  // Send an AJAX request to the server to add the product to the user's wishlist
  fetch(`/addTowishList`, { // Updated URL to match POST route
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      // Add authorization headers if needed, such as JWT token
    },
    body: JSON.stringify({ productId }) // Send product ID as part of the request body
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      
      // Success message with SweetAlert
      Swal.fire({
        icon: 'success',
        title: 'Added to Wishlist!',
        text: 'The product has been added to your wishlist.',
        showConfirmButton: false,
        timer: 1500
      }).then(() => {
                // Optionally, reload the page after user confirms SweetAlert
                location.reload();
            });
    } else {
      // Error message with SweetAlert
      Swal.fire({
        icon: 'error',
        title: 'Oops!',
        text: data.message || 'Failed to add to wishlist.',
        showConfirmButton: true
      });
    }
  })
  .catch(error => {
    console.error('Error:', error);
    // Show error message using SweetAlert
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: 'There was an error processing your request.',
      showConfirmButton: true
    });
  });
}
// Remove product from wishlist
function removeFromWishList(productId) {
    fetch(`/deleteProduct/${productId}`, {
        method: 'POST',  // Ensure the method is POST
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ productId })  // Send the productId in the body
    })
    .then(response => response.json())  // Convert response to JSON
    .then(data => {
        if (data.success) {
            // If the removal is successful, show a success message with SweetAlert
            Swal.fire({
                title: 'Removed from Wishlist',
                text: 'The product has been removed from your wishlist.',
                icon: 'success',
                confirmButtonText: 'Okay'
            }).then(() => {
                // Optionally, reload the page after user confirms SweetAlert
                location.reload();
            });
        } else {
            // If failed, show an error message
            Swal.fire({
                title: 'Error',
                text: data.message || 'Something went wrong. Please try again later.',
                icon: 'error',
                confirmButtonText: 'Okay'
            });
        }
    })
    .catch(err => {
        console.error("Error removing from wishlist", err);
        // Show error message if something goes wrong
        Swal.fire({
            title: 'Error',
            text: 'An unexpected error occurred. Please try again.',
            icon: 'error',
            confirmButtonText: 'Okay'
        });
    });
}
// Check if the user is logged in
const isLoggedIn = <%= user ? 'true' : 'false' %>;
function addToCart(productId) {
    if (!isLoggedIn) {
        Swal.fire({
            title: 'Login required!',
            text: 'You need to be logged in to add products to your cart.',
            icon: 'warning',
            confirmButtonText: 'Login'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = '/login';
            }
        });
        return;
    }

    $.ajax({
        type: 'POST',
        url: '/addToCart',
        contentType: 'application/json', // Set content type to JSON
        data: JSON.stringify({ productId: productId }), // Send the data as JSON
        success: function(response) {
            if (response.success) {
                // If the product was added to the cart successfully
                Swal.fire({
                    title: 'Product added to cart!',
                    icon: 'success',
                    showConfirmButton: false,
                    timer: 1500
                });
            } else {
                // Handle specific errors like out of stock
                Swal.fire({
                    title: 'Out of Stock!',
                    text: response.message || 'Sorry, this product is currently out of stock.',
                    icon: 'error',
                    confirmButtonText: 'Okay'
                });
            }
        },
        error: function(error) {
            // General error handling
            Swal.fire({
                title: 'Error',
                text: 'Could not add product to cart. Please try again.',
                icon: 'error',
                confirmButtonText: 'Okay'
            });
        }
    });
}
</script>














